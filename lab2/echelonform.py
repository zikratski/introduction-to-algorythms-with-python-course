# Напишите программу echelonform.py, которая переводит матрицу к ступенчатому виду (row echelon form). Матрица на входе задается строкой вида '-1 2 3, 4 -5 6, 7 8 -9' – ее можно обработать примерно так, как описано здесь (помимо функции split(), которая разбивает строку на части, также используйте strip(), которая убирает ненужные символы слева и справа). Обратите внимание, что матрица может быть не только квадратной (например, 3x3), но и прямоугольной (например, 2x4). Для построения ступенчатой матрицы используйте следующий алгоритм:
#
#     организуем цикл по диагональным элементам (0, 0), (1, 1) – насколько это возможно
#
#     если такой элемент равен нулю, то находим первую строку ниже, где элемент в том же столбце i не равен нулю, и меняем строки местами
#     если ненулевого элемента в этом столбце найти не удалось, то переходим к следующему шагу цикла
#     иначе преобразуем все строки ниже, вычитая из них элементы i-ой строки (чтобы занулить элемент в столбце i)
#
# На выходе программа выдает преобразованную матрицу, даже если там получилось несколько нулевых строк.

import sys

mas = [r.strip() for r in sys.argv[1].split(',')]
mas = [[float(y) for y in z.split(' ')] for z in mas]


def changestr(mas, n1,n2):
    temp = mas[n1]
    mas[n1] = mas[n2]
    mas[n2] = temp

def stup(mas):
    diag = len(mas)
    for i in range(diag-1):
        if mas[i][i] == 0:
            for im in range(i,diag):
                if mas[im][i] != 0:
                    changestr(mas,i, im)

            if mas[i][i] == 0:
                continue
        for ik in range(i+1,diag):
            coeff = mas[ik][i] /mas[i][i]
            for j in range(len(mas[0])):
                mas[ik][j] -= coeff*mas[i][j]
    return mas
print(stup(mas))