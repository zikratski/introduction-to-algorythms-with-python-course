# Напишите программу pi.py, которая вычисляет число 𝜋 с заданной точностью используя несколько подходов:
# ряд Лейбница, его вариант с попарным объединением членов ряда, формулу BBP. На вход программа принимает
# точность eps и название метода ('leibniz', 'pairwise', 'bbp'). На выходе отображаются количество шагов и
# приближенное значение числа  𝜋.


import sys

e = float(sys.argv[1])
t = sys.argv[2]

def pi(e, t):
    if(t=='leibniz'):
        s = 0
        sig = 1
        i = 0
        while(4/(2*i+1)>=e):
            s += 4*sig/(2*i+1)
            sig = -sig
            i += 1
    elif(t=='pairwise'):
        s = 0
        i = 0
        while(8/((4*i+1)*(4*i+3))>=e):
            s += 8/((4*i+1)*(4*i+3))
            i += 1
    elif(t=='bbp'):
        s = 0
        i = 0
        while((4/(8*i+1)-2/(8*i+4)-1/(8*i+5)-1/(8*i+6))/(16**i)>=e):
            s += (4/(8*i+1)-2/(8*i+4)-1/(8*i+5)-1/(8*i+6))/(16**i)
            i += 1
    return i, s
    

if __name__ == '__main__':
    print(pi(e, t))